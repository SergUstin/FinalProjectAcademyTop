Создать веб-проект «Онлайновая аренда жилья».
Приложение позволяет пользователю арендовать дом или квартиру онлайн,
сдать в аренду жилье или дом.
Должны быть реализованы возможности: регистрация пользователя (ФИО,
город, страна, ник, пароль, дата рождения, email), изменение параметров регистрации, поиск жилья по параметрам (город, страна, период времени, цена, рейтинг), 
сдача жилья в аренду (период времени, цена). У арендодателя и арендатора
должен быть рейтинг, который выставляется каждой стороной после завершения
аренды. Рейтинг варьируется от 1–5 звезд. При падении рейтинга ниже двух звезд
пользователь автоматически блокируется.

Этапы
1. Настройка среды разработки и инфраструктуры:

- Установка и настройка IDE (например, IntelliJ IDEA) и необходимых плагинов для разработки на Java с использованием Spring Framework.

- Создание проекта с использованием сборщика проектов (например, Maven или Gradle).

- Настройка системы контроля версий (например, Git) для управления исходным кодом.

2. Проектирование и создание базы данных:

- Проектирование схемы базы данных с использованием PostgreSQL.

- Создание таблиц, индексов и ограничений с помощью SQL.

- Настройка Liquibase для контроля версий структуры базы данных.

3. Реализация бэкенд-части приложения с использованием Spring Framework:

- Создание моделей данных (Entity) для взаимодействия с базой данных.

- Написание репозиториев для выполнения запросов к базе данных.

- Разработка сервисов для реализации бизнес-логики приложения.

4. Реализация RESTful API:

- Создание контроллеров для обработки HTTP-запросов.

- Определение маршрутов и параметров для взаимодействия с API.

5. Реализация бизнес-логики:

- Реализация функциональности регистрации и аутентификации пользователей.

- Разработка методов для поиска и аренды жилья.

- Внедрение механизма управления рейтингами.

6. Тестирование:

- Написание и запуск модульных тестов для бэкенд-части приложения.

- Использование инструментов для автоматизированного тестирования, например, JUnit и Mockito.

7. Интеграция фронтенд-части:

- Создание API-документации для взаимодействия с фронтенд-частью приложения.

- Тестирование взаимодействия между фронтендом и бэкендом.

8. Запуск и отладка:

- Запуск приложения в локальной среде для отладки и тестирования.

- Развертывание и проверка работоспособности приложения на сервере